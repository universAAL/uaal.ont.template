#parse('common.vm')
#license()
package ${PackageBase};

import org.universAAL.middleware.rdf.Resource;
import org.universAAL.middleware.rdf.ResourceFactory;
import #package($ontology).*;

/**
 * Factory Class for ${ontology.getOntologyID().getOntologyIRI().get().getFragment()} Ontology.
 * #templateStamp()
 */
public class #ontFactory($ontology) implements ResourceFactory {

	public Resource createInstance(String classURI, String instanceURI, int factoryIndex) {
		switch (factoryIndex) {
#foreach( $axiom in ${ontology.getAxioms()})
##${axiom.isOfType($AxiomType.DECLARATION)} && 
#if(${axiom.getEntity().isOWLClass()})
## No need to Skip Enumerations.
case ${foreach.index}:
return new #className(${axiom.getEntity()})(instanceURI);
#end
#end

}
return null;
}
#*
    #foreach($o in ${ontology.getAxioms()})
        #if(${o.getSignature().iterator().next().isOWLClass()} && ${o.isOfType($AxiomType.DECLARATION)}) 
        <tr>
            <td><a href="./classes/${o.getSignature().iterator().next().asOWLClass().getIRI().getFragment()}.html">${o.getSignature().iterator().next().asOWLClass().getIRI().getFragment()}</a><br></td>
            <td>$esc.getText("${o.getSignature().iterator().next().asOWLClass().getIRI()}")</td>
        </tr>
        #end
	#end
	
*#